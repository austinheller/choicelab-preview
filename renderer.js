!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.app=t():e.app=t()}(global,(()=>(()=>{"use strict";var e={418:e=>{
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var c,i,u=o(e),l=1;l<arguments.length;l++){for(var s in c=Object(arguments[l]))r.call(c,s)&&(u[s]=c[s]);if(t){i=t(c);for(var f=0;f<i.length;f++)n.call(c,i[f])&&(u[i[f]]=c[i[f]])}}return u}},408:(e,t,r)=>{
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var n=r(418),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var c=60109,i=60110,u=60112;t.Suspense=60113;var l=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),c=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),l=f("react.memo"),s=f("react.lazy")}var p="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y={};function m(e,t,r){this.props=e,this.context=t,this.refs=y,this.updater=r||h}function v(){}function g(e,t,r){this.props=e,this.context=t,this.refs=y,this.updater=r||h}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(d(85));this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=m.prototype;var b=g.prototype=new v;b.constructor=g,n(b,m.prototype),b.isPureReactComponent=!0;var w={current:null},E=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,r){var n,a={},c=null,i=null;if(null!=t)for(n in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(c=""+t.key),t)E.call(t,n)&&!_.hasOwnProperty(n)&&(a[n]=t[n]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var l=Array(u),s=0;s<u;s++)l[s]=arguments[s+2];a.children=l}if(e&&e.defaultProps)for(n in u=e.defaultProps)void 0===a[n]&&(a[n]=u[n]);return{$$typeof:o,type:e,key:c,ref:i,props:a,_owner:w.current}}function j(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var O=/\/+/g;function R(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function x(e,t,r,n,c){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return c=c(u=e),e=""===n?"."+R(u,0):n,Array.isArray(c)?(r="",null!=e&&(r=e.replace(O,"$&/")+"/"),x(c,t,r,"",(function(e){return e}))):null!=c&&(j(c)&&(c=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(c,r+(!c.key||u&&u.key===c.key?"":(""+c.key).replace(O,"$&/")+"/")+e)),t.push(c)),1;if(u=0,n=""===n?".":n+":",Array.isArray(e))for(var l=0;l<e.length;l++){var s=n+R(i=e[l],l);u+=x(i,t,r,s,c)}else if(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof s)for(e=s.call(e),l=0;!(i=e.next()).done;)u+=x(i=i.value,t,r,s=n+R(i,l++),c);else if("object"===i)throw t=""+e,Error(d(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function k(e,t,r){if(null==e)return e;var n=[],o=0;return x(e,n,"","",(function(e){return t.call(r,e,o++)})),n}function C(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var L={current:null};function P(){var e=L.current;if(null===e)throw Error(d(321));return e}var N={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:n};t.Children={map:k,forEach:function(e,t,r){k(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return k(e,(function(){t++})),t},toArray:function(e){return k(e,(function(e){return e}))||[]},only:function(e){if(!j(e))throw Error(d(143));return e}},t.Component=m,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=N,t.cloneElement=function(e,t,r){if(null==e)throw Error(d(267,e));var a=n({},e.props),c=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(c=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(s in t)E.call(t,s)&&!_.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==l?l[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){l=Array(s);for(var f=0;f<s;f++)l[f]=arguments[f+2];a.children=l}return{$$typeof:o,type:e.type,key:c,ref:i,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=j,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:C}},t.memo=function(e,t){return{$$typeof:l,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return P().useCallback(e,t)},t.useContext=function(e,t){return P().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return P().useEffect(e,t)},t.useImperativeHandle=function(e,t,r){return P().useImperativeHandle(e,t,r)},t.useLayoutEffect=function(e,t){return P().useLayoutEffect(e,t)},t.useMemo=function(e,t){return P().useMemo(e,t)},t.useReducer=function(e,t,r){return P().useReducer(e,t,r)},t.useRef=function(e){return P().useRef(e)},t.useState=function(e){return P().useState(e)},t.version="17.0.2"},294:(e,t,r)=>{e.exports=r(408)}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,r),a.exports}r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{function e(e){var t,r,n=window.sessionStorage.getItem("projectPath"),o="scene",a=[];if(e.comments&&e.comments.length>0){for(var c=0;c<e.comments.length;c++){var i=e.comments[c],u="comment-".concat(c);a.push(React.createElement("li",{key:u},i))}t=React.createElement("ul",{className:"comments"},a)}var l,s,f,p=[];function d(t){var r=e.actions[t],o="action-".concat(t),a="";switch(r.type){case"text":if(""!==r.content.trim()){var c=document.createElement("div");Choicelab.convertTextToHTML(r.content).forEach((function(e){c.appendChild(e)})),a=c.innerHTML}break;case"audio":var i=n+"/"+r.src;a=React.createElement("audio",{src:i,controls:!0});break;case"cc":a=React.createElement("p",{className:"caption"},r.text);break;case"response":a=React.createElement("div",null,React.createElement("span",{className:"type"},"Response:"),React.createElement("audio",{src:r.src,controls:!0}));break;case"input":var u=[],l=0;r.inputs.forEach((function(e){var t="input-".concat(l);"button"===e.type?u.push(React.createElement("button",{key:t,value:e.value},e.label)):u.push(React.createElement("input",{key:t,type:e.type,value:e.value})),l++})),a=React.createElement(React.Fragment,null,React.createElement("span",{className:"type"},React.createElement("span",{className:"icon"},"⑃ "),React.createElement("span",{className:"input"},r.name)),React.createElement("form",null,u));break;default:a=React.createElement("span",{className:"noDisplay"},r.type)}"text"===r.type?p.push(React.createElement("li",{key:o,"data-action":r.type,dangerouslySetInnerHTML:{__html:a}})):p.push(React.createElement("li",{key:o,"data-action":r.type},a))}for(var h=0;h<e.actions.length;h++)d(h);if(r=React.createElement("ul",{className:"actions"},p),e.rules&&(l=React.createElement("div",{className:"rules"},e.rules,"?"),o+=" has-rules"),e.goto){s=e.goto,o+=" goto";var y="#path-".concat(s);f=React.createElement("div",{className:"goto"},React.createElement("a",{className:"goto-link","data-goto":e.goto,href:y},React.createElement("i",{className:"icon-path fa-solid fa-code-branch"}),React.createElement("i",{className:"icon-goto fa-solid fa-arrow-right"})," ",s)),void 0!==e.gotoPrevious&&(o+=" previous-scene-is-goto"),void 0!==e.gotoNext&&(o+=" next-scene-is-goto")}return React.createElement("li",{className:o,id:([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(function(e){return(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16)})),"data-goto":s},React.createElement("div",{className:"contents"},l,t,r,f))}function t(t){for(var r=[],n=0;n<Choicelab.files.length;n++){var o=Choicelab.files[n];r.push({path:o,scenes:[]})}function a(e){for(var t=0;t<r.length;t++)if(r[t].path===e)return t}for(n=1;n<Choicelab.scenes.length;n++){var c=Choicelab.scenes[n],i="scene-".concat(n),u=c.file.name,l=r[a(u)],s=void 0,f=void 0;n>1&&(s=Choicelab.scenes[n-1].goto),n!==Choicelab.scenes.length-1&&(f=Choicelab.scenes[n+1].goto),l.scenes.push(React.createElement(e,{key:i,gotoPrevious:s,gotoNext:f,goto:c.goto,rules:c.rules,actions:c.actions,comments:c.comments}))}var p=[];for(n=0;n<r.length;n++){l=r[n],i="path-".concat(l.path);p.push(React.createElement("ul",{className:"path",id:i,"data-path":l.path,key:i},l.scenes))}return React.createElement("div",{id:"scene-inventory"},React.createElement("ul",{id:"paths"},p))}r.r(n);var o=r(294);function a(e,t){var r=localStorage.getItem("choicelab_viewer");r||localStorage.setItem("choicelab_viewer",JSON.stringify({}));var n=JSON.parse(r);void 0!==e&&void 0!==t&&(n[e]=t),localStorage.setItem("choicelab_viewer",JSON.stringify(n))}function c(e){var t=localStorage.getItem("choicelab_viewer");return t?JSON.parse(t)[e]:null}function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function s(e,t,r){return t&&l(e.prototype,t),r&&l(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function f(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}function d(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=m(e);if(t){var o=m(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return h(this,r)}}function h(e,t){if(t&&("object"===i(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return y(e)}function y(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function m(e){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},m(e)}function v(){var e=c("zoom"),t=parseFloat(e)+.2;t>1.2&&(t=1.2),t=parseFloat(t).toFixed(2),document.querySelector("#flowchart").style.transform="scale(".concat(t,")"),a("zoom",t)}function g(){var e=c("zoom"),t=parseFloat(e)-.2;t<.2&&(t=.2),t=parseFloat(t).toFixed(2),document.querySelector("#flowchart").style.transform="scale(".concat(t,")"),a("zoom",t)}function b(){window.electron.openExternal("http://localhost:8000")}var w=function(e){f(r,e);var t=d(r);function r(e){return u(this,r),t.call(this,e)}return s(r,[{key:"render",value:function(){return o.createElement("div",{id:"navigation"},o.createElement("button",{id:"zoom-out",onClick:g},o.createElement("i",{className:"fa-solid fa-magnifying-glass-minus"})),o.createElement("button",{id:"zoom-out",onClick:v},o.createElement("i",{className:"fa-solid fa-magnifying-glass-plus"})),o.createElement("button",{id:"open-browser",onClick:b},o.createElement("i",{className:"fa-solid fa-eye"})))}}]),r}(o.Component);o.Component;function E(e){return o.createElement("div",{id:"toolbar"},o.createElement(w,null))}function _(e){var t,r=0,n=0,o=0,a=0,c=_.offsetBase;if(!c&&document.body&&((c=_.offsetBase=document.createElement("div")).style.cssText="position:absolute;left:0;top:0",document.body.appendChild(c)),e&&e.ownerDocument===document&&"getBoundingClientRect"in e&&c){var i=e.getBoundingClientRect(),u=c.getBoundingClientRect();t=!0,r=i.left-u.left,n=i.top-u.top,o=i.right-i.left,a=i.bottom-i.top}return{found:t,left:r,top:n,width:o,height:a,right:r+o,bottom:n+a}}function S(e){var t=e.paths[e.pathName].el.querySelectorAll(".scene");e.paths[e.pathName].added=!0;var r=[],n=0;function o(){var t=document.createElement("div");t.classList.add("goto-row"),t.classList.add("count-".concat(r.length)),r.forEach((function(e){t.appendChild(e)})),e.container.appendChild(t),r.length=0}t.forEach((function(a){if(a.classList.contains("goto")){var c=a.getAttribute("data-goto"),i=e.paths[c];if(r.push(a),!1===i.added){a.classList.add("embed-goto");var u=document.createElement("ul");u.classList.add("path"),u.setAttribute("data-path",c),a.appendChild(u),S({container:u,paths:e.paths,pathName:c})}}else{r.length>0&&o();var l=document.createElement("div");l.classList.add("row");var s=[],f=t[n+1];if(f){if(f.classList.contains("goto")){for(var p=!1,d=0;d<t.length;d++)if(!(d<n+1)){var h=t[d];if(h.classList.contains("goto"))s.push(h.getAttribute("id"));else{if(!1!==p)break;p=!0,s.push(h.getAttribute("id"))}}}else s.push(f.getAttribute("id"));a.setAttribute("data-connect-to",s.toString())}l.appendChild(a),e.container.appendChild(l)}n++})),r.length>0&&o()}function j(){var e=document.querySelector("#flowchart"),t={};document.querySelectorAll(".path").forEach((function(e){var r=e.getAttribute("data-path");t[r]={name:r,added:!1,el:e}})),S({container:e,paths:t,pathName:"start"}),document.querySelectorAll(".path-label").forEach((function(e){})),setTimeout((function(){document.querySelectorAll(".scene").forEach((function(e){var t=e.getAttribute("data-connect-to");if(t){var r=t.split(","),n=_(e),o=n.left-8+n.width/2,a=n.top+n.height-10;r.forEach((function(t){var r=_(document.getElementById(t)),n=r.left-8+r.width/2,c=r.top,i=document.createElementNS("http://www.w3.org/2000/svg","svg"),u=document.createElementNS("http://www.w3.org/2000/svg","line");i.classList.add("line"),i.setAttribute("data-connect",t),u.setAttribute("stroke-width",1.5),i.style.top=0,i.style.left=0,i.style.width="100%",i.style.height="100%",u.setAttribute("y1",a+10),u.setAttribute("y2",c),u.setAttribute("x1",o-8),u.setAttribute("x2",n-8),i.appendChild(u),e.parentNode.appendChild(i)}))}}))}),50)}function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function R(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function x(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function C(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=P(e);if(t){var o=P(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return L(this,r)}}function L(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}function N(){/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */N=function(){return e};var e={},t=Object.prototype,r=t.hasOwnProperty,n="function"==typeof Symbol?Symbol:{},o=n.iterator||"@@iterator",a=n.asyncIterator||"@@asyncIterator",c=n.toStringTag||"@@toStringTag";function i(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{i({},"")}catch(e){i=function(e,t,r){return e[t]=r}}function u(e,t,r,n){var o=t&&t.prototype instanceof f?t:f,a=Object.create(o.prototype),c=new S(n||[]);return a._invoke=function(e,t,r){var n="suspendedStart";return function(o,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw a;return R()}for(r.method=o,r.arg=a;;){var c=r.delegate;if(c){var i=w(c,r);if(i){if(i===s)continue;return i}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var u=l(e,t,r);if("normal"===u.type){if(n=r.done?"completed":"suspendedYield",u.arg===s)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n="completed",r.method="throw",r.arg=u.arg)}}}(e,r,c),a}function l(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var s={};function f(){}function p(){}function d(){}var h={};i(h,o,(function(){return this}));var y=Object.getPrototypeOf,m=y&&y(y(j([])));m&&m!==t&&r.call(m,o)&&(h=m);var v=d.prototype=f.prototype=Object.create(h);function g(e){["next","throw","return"].forEach((function(t){i(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){function n(o,a,c,i){var u=l(e[o],e,a);if("throw"!==u.type){var s=u.arg,f=s.value;return f&&"object"==O(f)&&r.call(f,"__await")?t.resolve(f.__await).then((function(e){n("next",e,c,i)}),(function(e){n("throw",e,c,i)})):t.resolve(f).then((function(e){s.value=e,c(s)}),(function(e){return n("throw",e,c,i)}))}i(u.arg)}var o;this._invoke=function(e,r){function a(){return new t((function(t,o){n(e,r,t,o)}))}return o=o?o.then(a,a):a()}}function w(e,t){var r=e.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,w(e,t),"throw"===t.method))return s;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return s}var n=l(r,e.iterator,t.arg);if("throw"===n.type)return t.method="throw",t.arg=n.arg,t.delegate=null,s;var o=n.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,s):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,s)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function _(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function S(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function j(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,a=function t(){for(;++n<e.length;)if(r.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return a.next=a}}return{next:R}}function R(){return{value:void 0,done:!0}}return p.prototype=d,i(v,"constructor",d),i(d,"constructor",p),p.displayName=i(d,c,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,i(e,c,"GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},g(b.prototype),i(b.prototype,a,(function(){return this})),e.AsyncIterator=b,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var c=new b(u(t,r,n,o),a);return e.isGeneratorFunction(r)?c:c.next().then((function(e){return e.done?e.value:c.next()}))},g(v),i(v,c,"Generator"),i(v,o,(function(){return this})),i(v,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=j,S.prototype={constructor:S,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(r,n){return c.type="throw",c.arg=e,t.next=r,n&&(t.method="next",t.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],c=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var i=r.call(a,"catchLoc"),u=r.call(a,"finallyLoc");if(i&&u){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(i){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var c=a?a.completion:{};return c.type=e,c.arg=t,a?(this.method="next",this.next=a.finallyLoc,s):this.complete(c)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),s},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),_(r),s}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;_(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:j(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),s}},e}function A(e,t,r,n,o,a,c){try{var i=e[a](c),u=i.value}catch(e){return void r(e)}i.done?t(u):Promise.resolve(u).then(n,o)}function T(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function c(e){A(a,n,o,c,i,"next",e)}function i(e){A(a,n,o,c,i,"throw",e)}c(void 0)}))}}function I(){return q.apply(this,arguments)}function q(){return(q=T(N().mark((function e(){return N().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.electron.openFile();case 2:F(e.sent),window.location.reload();case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function F(e){window.sessionStorage.setItem("projectPath",e)}document.addEventListener("DOMContentLoaded",(function(){var e=function(){document.querySelector("#recent-projects");var e=c("recent_projects"),t=!1;if(e){t=document.createElement("select"),0===e.length&&t.setAttribute("disabled","disabled");var r=document.createElement("option");r.innerText="Open Recent",t.appendChild(r),e.forEach((function(e){var r=function(e){var t=e.split(/([^\\^/]+)/g),r=[];return t.forEach((function(e){""!==e.trim()&&"/"!==e&&"\\"!==e&&r.push(e)})),r[r.length-1]}(e),n=document.createElement("option");n.setAttribute("value",e),n.innerText=r,t.appendChild(n)}));var n=document.createElement("option");n.innerText="–",n.setAttribute("disabled","disabled"),t.appendChild(n);var o=document.createElement("option");o.innerText="Clear Menu",o.value="_clearMenu",t.appendChild(o)}else a("recent_projects",e=[]);return t}();document.querySelector("#recent-projects").appendChild(e),e.addEventListener("change",(function(e){var t=e.target.value;"_clearMenu"===t?a("recent_projects",[]):(F(t),window.electron.selectProject(t)),window.location.reload()}))})),document.getElementById("btn").addEventListener("click",T(N().mark((function e(){return N().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:I();case 1:case"end":return e.stop()}}),e)})))),document.addEventListener("DOMContentLoaded",(function(){var e;null!==(e=window.sessionStorage.getItem("projectPath"))&&"undefined"!==e&&""!==e&&(Choicelab.create({projectPath:e,stage:"#root",electron:!0}),document.body.classList.add("project-loaded"))})),Choicelab.on("scenesParsed","loadViewer",(function(){var e=c("recent_projects");e||(e=[]);var r=window.sessionStorage.getItem("projectPath");e.includes(r)||e.push(r),a("recent_projects",e);var n=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(u,React.Component);var r,n,o,i=C(u);function u(){return R(this,u),i.apply(this,arguments)}return r=u,(n=[{key:"render",value:function(){return React.createElement(React.Fragment,null,React.createElement(E,null),React.createElement("div",{id:"flowchart"}),React.createElement(t,null))}},{key:"componentDidMount",value:function(){j(),setTimeout((function(){document.querySelector("html").style.scrollBehavior="smooth"}),1e3),setInterval((function(){var e,t;e="scroll_position",t={x:window.scrollX,y:window.scrollY},window.sessionStorage.setItem(e,JSON.stringify(t))}),1e3);var e,t,r=(e="scroll_position",(t=window.sessionStorage.getItem(e))?JSON.parse(t):null);if(null!==r)window.scrollTo(r.x,r.y);else{window.electron.resizeWindowForProject();var n=document.querySelector("#flowchart > div:first-of-type .scene > .contents");if(n){var o=_(n);window.scrollTo(o.left-600,0)}}document.querySelectorAll(".actions button").forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault()}))})),setTimeout((function(){document.querySelector("#flowchart").style.transition="transform 0.2s ease"}),1e3);var i=c("zoom")?c("zoom"):1;a("zoom",i),setTimeout((function(){var e;e=i,e=parseFloat(e).toFixed(2),document.querySelector("#flowchart").style.transform="scale(".concat(e,")"),a("zoom",e)}),50),document.addEventListener("keydown",(function(e){"Equal"===e.code&&(!0!==e.ctrlKey&&!0!==e.metaKey||(e.preventDefault(),v())),"Minus"===e.code&&(!0!==e.ctrlKey&&!0!==e.metaKey||(e.preventDefault(),g()))})),document.querySelectorAll(".goto-link").forEach((function(e){e.addEventListener("click",(function(t){t.preventDefault();var r,n,o,a,c=e.getAttribute("data-goto"),i=document.querySelector('.embed-goto[data-goto="'.concat(c,'"]'));r=45,n=_(i),o=n.top-r,a=n.left,window.scrollTo({top:o,left:a,behavior:"smooth"}),console.log(e,i)}))}))}}])&&x(r.prototype,n),o&&x(r,o),Object.defineProperty(r,"prototype",{writable:!1}),u}();ReactDOM.render(React.createElement(n,null),document.getElementById("root"))}))})(),n})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,